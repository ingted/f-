// <auto-generated>

namespace Microsoft.VisualStudio.FSharp.ProjectSystem

open System.Reflection

module internal FSharpSR =
    type private C (_dummy:System.Object) = class end
    let mutable Culture = System.Globalization.CultureInfo.CurrentUICulture
    let ResourceManager = new System.Resources.ResourceManager("VSPackage", C(null).GetType().GetTypeInfo().Assembly)
    let GetString(name:System.String) : System.String = ResourceManager.GetString(name, Culture)
    let GetObject(name:System.String) : System.Object = ResourceManager.GetObject(name, Culture)

    /// <summary>You must build the target project before it can be referenced.</summary>
    let ProjectReferenceError2() = GetString("ProjectReferenceError2")

    /// <summary>Application</summary>
    let Application() = GetString("Application")

    /// <summary>General</summary>
    let GeneralCaption() = GetString("GeneralCaption")

    /// <summary>Assembly Name</summary>
    let AssemblyName() = GetString("AssemblyName")

    /// <summary>The name of the output file that will hold assembly metadata.</summary>
    let AssemblyNameDescription() = GetString("AssemblyNameDescription")

    /// <summary>Output Type</summary>
    let OutputType() = GetString("OutputType")

    /// <summary>The type of application to build.</summary>
    let OutputTypeDescription() = GetString("OutputTypeDescription")

    /// <summary>Default Namespace</summary>
    let DefaultNamespace() = GetString("DefaultNamespace")

    /// <summary>Specifies the default namespace for added items, such as classes, that are added via the Add New Item Dialog Box.</summary>
    let DefaultNamespaceDescription() = GetString("DefaultNamespaceDescription")

    /// <summary>Startup Object</summary>
    let StartupObject() = GetString("StartupObject")

    /// <summary>The name of the class that contains the static Main method that you want called when you launch your application.</summary>
    let StartupObjectDescription() = GetString("StartupObjectDescription")

    /// <summary>Application Icon</summary>
    let ApplicationIcon() = GetString("ApplicationIcon")

    /// <summary>Sets the .ico file to use as your application icon.</summary>
    let ApplicationIconDescription() = GetString("ApplicationIconDescription")

    /// <summary>Project</summary>
    let Project() = GetString("Project")

    /// <summary>Project File</summary>
    let ProjectFile() = GetString("ProjectFile")

    /// <summary>The name of the file containing build, configuration, and other information about the project.</summary>
    let ProjectFileDescription() = GetString("ProjectFileDescription")

    /// <summary>Project Folder</summary>
    let ProjectFolder() = GetString("ProjectFolder")

    /// <summary>The absolute location of the project.</summary>
    let ProjectFolderDescription() = GetString("ProjectFolderDescription")

    /// <summary>Output File</summary>
    let OutputFile() = GetString("OutputFile")

    /// <summary>The name of the project's primary output file.</summary>
    let OutputFileDescription() = GetString("OutputFileDescription")

    /// <summary>Target Platform</summary>
    let TargetPlatform() = GetString("TargetPlatform")

    /// <summary>The version of the Common Language Runtime to use for output assembly</summary>
    let TargetPlatformDescription() = GetString("TargetPlatformDescription")

    /// <summary>Target Platform Location</summary>
    let TargetPlatformLocation() = GetString("TargetPlatformLocation")

    /// <summary>The location of the target platform</summary>
    let TargetPlatformLocationDescription() = GetString("TargetPlatformLocationDescription")

    /// <summary>F# Project File (*.fsproj)</summary>
    let ProjectFileExtensionFilter() = GetString("ProjectFileExtensionFilter")

    /// <summary>Component File (*.dll;*.exe)</summary>
    let ComponentFileExtensionFilter() = GetString("ComponentFileExtensionFilter")

    /// <summary>Other Flags</summary>
    let OtherFlags() = GetString("OtherFlags")

    /// <summary>Other compiler flags</summary>
    let OtherFlagsDescription() = GetString("OtherFlagsDescription")

    /// <summary>Build</summary>
    let Build() = GetString("Build")

    /// <summary></summary>
    let _1() = GetString("1")

    /// <summary></summary>
    let _2() = GetString("2")

    /// <summary></summary>
    let _3() = GetString("3")

    /// <summary>Resources\FSharpSplashScreenIcon.bmp;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</summary>
    let _300() = GetObject("300")

    /// <summary>Resources\FSharpAboutBox.ico;System.Drawing.Icon, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</summary>
    let _400() = GetObject("400")

    /// <summary>Resources\FSharpWindowsApplication.ico;System.Drawing.Icon, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</summary>
    let _4000() = GetObject("4000")

    /// <summary>Resources\FSharpApplication_32.ico;System.Drawing.Icon, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</summary>
    let _4001() = GetObject("4001")

    /// <summary>Resources\FSharpLibrary.ico;System.Drawing.Icon, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</summary>
    let _4002() = GetObject("4002")

    /// <summary>Resources\FSharpScript.ico;System.Drawing.Icon, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</summary>
    let _4003() = GetObject("4003")

    /// <summary>Resources\FSharpTutorial.ico;System.Drawing.Icon, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</summary>
    let _4004() = GetObject("4004")

    /// <summary>Resources\FSharpCodeFile_32.ico;System.Drawing.Icon, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</summary>
    let _4005() = GetObject("4005")

    /// <summary>Resources\FSharpScriptFile.ico;System.Drawing.Icon, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</summary>
    let _4006() = GetObject("4006")

    /// <summary>Resources\FSharpSignature.ico;System.Drawing.Icon, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</summary>
    let _4007() = GetObject("4007")

    /// <summary>Resources\FSharpEmptyProject_32.ico;System.Drawing.Icon, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</summary>
    let _4008() = GetObject("4008")

    /// <summary>Resources\Utility_Text.ico;System.Drawing.Icon, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</summary>
    let _4009() = GetObject("4009")

    /// <summary>Resources\Local_AppConfig.ico;System.Drawing.Icon, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</summary>
    let _4010() = GetObject("4010")

    /// <summary>Resources\Data_XML.ico;System.Drawing.Icon, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</summary>
    let _4011() = GetObject("4011")

    /// <summary>Resources\Resource_Bitmap.ico;System.Drawing.Icon, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</summary>
    let _4012() = GetObject("4012")

    /// <summary>Resources\FSharpSilverLIghtClassLibrary.ico;System.Drawing.Icon, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</summary>
    let _4013() = GetObject("4013")

    /// <summary>Resources\Data_Source.ico;System.Drawing.Icon, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</summary>
    let _4014() = GetObject("4014")

    /// <summary>Resources\Data_LinQToSQL.ico;System.Drawing.Icon, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</summary>
    let _4015() = GetObject("4015")

    /// <summary>Resources\Data_Entity.ico;System.Drawing.Icon, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</summary>
    let _4016() = GetObject("4016")

    /// <summary>Resources\FSharpResources.ico;System.Drawing.Icon, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</summary>
    let _4017() = GetObject("4017")

    /// <summary>Resources\FSharpTestLibrary.ico;System.Drawing.Icon, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</summary>
    let _4018() = GetObject("4018")

    /// <summary>Resources\ProjectNode.bmp;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</summary>
    let _4100() = GetObject("4100")

    /// <summary>Resources\FSFile.bmp;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</summary>
    let _4101() = GetObject("4101")

    /// <summary>Resources\FSIFile.bmp;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</summary>
    let _4102() = GetObject("4102")

    /// <summary>Resources\FSXFile.bmp;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</summary>
    let _4103() = GetObject("4103")

    /// <summary>Resources\FSharpInteractive.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</summary>
    let _4200() = GetObject("4200")

    /// <summary>F# Script File</summary>
    let _5001() = GetString("5001")

    /// <summary>A blank F# script file (.fsx)</summary>
    let _5002() = GetString("5002")

    /// <summary>Script.fsx</summary>
    let _5003() = GetString("5003")

    /// <summary>FSharp Text Editor</summary>
    let _5005() = GetString("5005")

    /// <summary>Code</summary>
    let _5006() = GetString("5006")

    /// <summary>General</summary>
    let _5007() = GetString("5007")

    /// <summary>Windows</summary>
    let _5008() = GetString("5008")

    /// <summary>Silverlight</summary>
    let _5009() = GetString("5009")

    /// <summary>F# Source File</summary>
    let _5011() = GetString("5011")

    /// <summary>A blank F# source file (.fs)</summary>
    let _5012() = GetString("5012")

    /// <summary>File.fs</summary>
    let _5013() = GetString("5013")

    /// <summary>Console Application (.NET Framework)</summary>
    let _5014() = GetString("5014")

    /// <summary>A project for creating a command-line application</summary>
    let _5015() = GetString("5015")

    /// <summary>Library (.NET Framework)</summary>
    let _5016() = GetString("5016")

    /// <summary>A project for creating an F# library</summary>
    let _5017() = GetString("5017")

    /// <summary>Tutorial (.NET Framework)</summary>
    let _5018() = GetString("5018")

    /// <summary>A tutorial project providing a walkthrough of the F# language</summary>
    let _5019() = GetString("5019")

    /// <summary>Silverlight Library</summary>
    let _5020() = GetString("5020")

    /// <summary>A project for creating an F# Silverlight library</summary>
    let _5021() = GetString("5021")

    /// <summary>Application Configuration File</summary>
    let _5022() = GetString("5022")

    /// <summary>A file for storing application configuration and settings values</summary>
    let _5023() = GetString("5023")

    /// <summary>Source File</summary>
    let _5024() = GetString("5024")

    /// <summary>A blank F# source file (.fs)</summary>
    let _5025() = GetString("5025")

    /// <summary>Script File</summary>
    let _5026() = GetString("5026")

    /// <summary>A blank F# script file (.fsx)</summary>
    let _5027() = GetString("5027")

    /// <summary>Signature File</summary>
    let _5028() = GetString("5028")

    /// <summary>A blank F# signature file (.fsi)</summary>
    let _5029() = GetString("5029")

    /// <summary>Text File</summary>
    let _5030() = GetString("5030")

    /// <summary>An empty text file</summary>
    let _5031() = GetString("5031")

    /// <summary>XML File</summary>
    let _5032() = GetString("5032")

    /// <summary>A blank XML file</summary>
    let _5033() = GetString("5033")

    /// <summary>Portable Library (.NET 4.5, Windows Store, Silverlight 5, Xamarin)</summary>
    let _5034() = GetString("5034")

    /// <summary>A project for creating an F# library (.dll) that can run on .NET Framework 4.5, Windows Store, Silverlight 5, Xamarin.iOS, Xamarin.Android and Xamarin.iOS(Classic).  Profile 47</summary>
    let _5035() = GetString("5035")

    /// <summary>Data</summary>
    let _5036() = GetString("5036")

    /// <summary>OData Service Connection (LINQ, type provider)</summary>
    let _5037() = GetString("5037")

    /// <summary>A project item for consuming a Open Data Protocol (OData) web service using ODataService type provider.</summary>
    let _5038() = GetString("5038")

    /// <summary>A project item for consuming a .NET Managed Resources File (Resx) using ResxFile type provider.</summary>
    let _5040() = GetString("5040")

    /// <summary>SQL Database Connection (LINQ to SQL, type provider)</summary>
    let _5041() = GetString("5041")

    /// <summary>A project item for using the SqlDataConnection (LINQ to SQL) type provider to generate types and consume data in a live SQL database.</summary>
    let _5042() = GetString("5042")

    /// <summary>SQL Database Connection (LINQ to Entities, type provider)</summary>
    let _5043() = GetString("5043")

    /// <summary>A project item for using the SqlEntityConnection (Entity Data Model) type provider to generate types and consume data in a live SQL database.</summary>
    let _5044() = GetString("5044")

    /// <summary>WSDL Service Connection (type provider)</summary>
    let _5045() = GetString("5045")

    /// <summary>A project item for consuming a Web Service using WsdlService type provider.</summary>
    let _5046() = GetString("5046")

    /// <summary>Portable Library (.NET 4.5, Windows Store, Xamarin)</summary>
    let _5047() = GetString("5047")

    /// <summary>A project for creating an F# library (.dll) that can run on .NET Framework 4.5, Windows Store, Xamarin.iOS, Xamarin.Android and Xamarin.iOS(Classic).  Profile 7</summary>
    let _5048() = GetString("5048")

    /// <summary>Portable Library (.NET 4.5, Windows Store, Windows Phone 8 Silverlight, Xamarin)</summary>
    let _5049() = GetString("5049")

    /// <summary>A project for creating an F# library (.dll) that can run on .NET Framework 4.5, Windows Store, Windows Phone 8 Silverlight, Xamarin.iOS, Xamarin.Android and Xamarin.iOS(Classic).  Profile 78</summary>
    let _5050() = GetString("5050")

    /// <summary>Portable Library (.NET 4.5, Windows Store, Windows Phone 8.1, Windows Phone Silverlight 8, Xamarin)</summary>
    let _5051() = GetString("5051")

    /// <summary>A project for creating an F# library (.dll) that can run on .NET Framework 4.5, Windows Store, Windows Phone 8.1, Windows Phone Silverlight 8, Xamarin.iOS, Xamarin.Android and Xamarin.iOS(Classic).  Profile 259</summary>
    let _5052() = GetString("5052")

    /// <summary>Resources File</summary>
    let _5053() = GetString("5053")

    /// <summary>A file for storing resources</summary>
    let _5054() = GetString("5054")

    /// <summary>F# Tools</summary>
    let _6000() = GetString("6000")

    /// <summary>F# Interactive</summary>
    let _6001() = GetString("6001")

    /// <summary>F# Project Files (*.fsproj);*.fsproj</summary>
    let _6002() = GetString("6002")

    /// <summary>Visual F# Files (*.fs,*.fsi,*.fsx,*.fsscript);*.fs,*.fsi,*.fsx,*.fsscript</summary>
    let _6003() = GetString("6003")

    /// <summary>Visual F#</summary>
    let _7000() = GetString("7000")

    /// <summary>Customizes the environment to maximize code editor screen space and improve the visibility of F# commands and tool windows.</summary>
    let _7001() = GetString("7001")

    /// <summary>Microsoft Visual F# Tools {{FSProductVersion}} for F# {{FSLanguageVersion}}</summary>
    let ProductDetails() = GetString("ProductDetails")

    /// <summary>Microsoft Visual F# Tools {{FSProductVersion}} for F# {{FSLanguageVersion}}</summary>
    let _9002() = GetString("9002")

    /// <summary>1.0</summary>
    let ProductID() = GetString("ProductID")

    /// <summary>Microsoft Visual F# Tools</summary>
    let ProductName() = GetString("ProductName")

    /// <summary>Visual F# Tools {{FSProductVersion}} for F# {{FSLanguageVersion}}</summary>
    let _9001() = GetString("9001")

    /// <summary>F# Interactive</summary>
    let _9027() = GetString("9027")

    /// <summary>Microsoft Visual F#</summary>
    let ProductRegistryName() = GetString("ProductRegistryName")

    /// <summary>Invalid OutputType value</summary>
    let InvalidOutputType() = GetString("InvalidOutputType")

    /// <summary>Invalid RunPostBuildEvent value</summary>
    let InvalidRunPostBuildEvent() = GetString("InvalidRunPostBuildEvent")

    /// <summary>Invalid TargetFrameworkVersion number</summary>
    let InvalidTargetFrameworkVersion() = GetString("InvalidTargetFrameworkVersion")

    /// <summary>The project '{0}' could not be opened because opening it would cause a folder to be rendered multiple times in the solution explorer. One such problematic item is '{1}'. To open this project in Visual Studio, first edit the project file and fix the problem.</summary>
    let ProjectRenderFolderMultiple() = GetString("ProjectRenderFolderMultiple")

    /// <summary>Default Namespace:\nThe string for the default namespace must be a valid identifier</summary>
    let PropertyDefaultNamespace() = GetString("PropertyDefaultNamespace")

    /// <summary>Template file not found: {0}</summary>
    let TemplateNotFound() = GetString("TemplateNotFound")

    /// <summary>Changing the Target Framework requires that the current project be closed and then reopened.\nAny unsaved changes within the project will be automatically saved.\n\nChanging Target Framework may require manual modification of project files in order to build.\n\nAre you sure you want to change the Target Framework for this project?</summary>
    let NeedReloadToChangeTargetFx() = GetString("NeedReloadToChangeTargetFx")

    /// <summary>Add Reference</summary>
    let AddReferenceDialogTitle() = GetString("AddReferenceDialogTitle")

    /// <summary>Change path and command line arguments passed to the F# Interactive</summary>
    let _6005() = GetString("6005")

    /// <summary>Enable or disable Type Providers</summary>
    let _6006() = GetString("6006")

    /// <summary>Visual F# Items</summary>
    let _6007() = GetString("6007")

    /// <summary>Reference Manager - {0}</summary>
    let AddReferenceDialogTitle_Dev11() = GetString("AddReferenceDialogTitle_Dev11")

    /// <summary>F# projects in the current version of Visual Studio support only Silverlight 5.</summary>
    let Dev11SupportsOnlySilverlight5() = GetString("Dev11SupportsOnlySilverlight5")

    /// <summary>The project will be retargeted, and its targeted frameworks will be reduced.</summary>
    let AddReferenceAssemblyPageDialogRetargetingText() = GetString("AddReferenceAssemblyPageDialogRetargetingText")

    /// <summary>All of the Framework assemblies are already referenced. Please use the Object Browser to explore the references in the Framework.</summary>
    let AddReferenceAssemblyPageDialogNoItemsText() = GetString("AddReferenceAssemblyPageDialogNoItemsText")

    /// <summary>Referencing this version of FSharp.Core will cause your project to be incompatible with older versions of Visual Studio.  Do you want to continue?</summary>
    let FSharpCoreVersionIsNotLegacyCompatible() = GetString("FSharpCoreVersionIsNotLegacyCompatible")

    /// <summary>Updating compilation sources and flags...</summary>
    let ComputingSourcesAndFlags() = GetString("ComputingSourcesAndFlags")

    /// <summary>Updating solution configuration...</summary>
    let UpdatingSolutionConfiguration() = GetString("UpdatingSolutionConfiguration")

    /// <summary>The file '{0}' cannot be placed above '{1}' in the Solution Explorer.\n\n{2}.</summary>
    let FileCannotBePlacedBodyAbove() = GetString("FileCannotBePlacedBodyAbove")

    /// <summary>The file '{0}' cannot be placed below '{1}' in the Solution Explorer.\n\n{2}.</summary>
    let FileCannotBePlacedBodyBelow() = GetString("FileCannotBePlacedBodyBelow")

    /// <summary>The file is in a different subtree</summary>
    let FileCannotBePlacedDifferentSubtree() = GetString("FileCannotBePlacedDifferentSubtree")

    /// <summary>The '{0}' folder cannot be moved as it already exists in the Solution Explorer in a different location</summary>
    let FileCannotBePlacedMultipleFiles() = GetString("FileCannotBePlacedMultipleFiles")
